<?php
/* Smarty version 3.1.45, created on 2022-08-03 07:01:27
  from 'C:\xampp\htdocs\buku_tamu_gagal\app\templates\index.html' */

/* @var Smarty_Internal_Template $_smarty_tpl */
if ($_smarty_tpl->_decodeProperties($_smarty_tpl, array (
  'version' => '3.1.45',
  'unifunc' => 'content_62ea0127998114_16457300',
  'has_nocache_code' => false,
  'file_dependency' => 
  array (
    '7d9a8b13a68ed55b9ba92e22ca60804f8e91c2a4' => 
    array (
      0 => 'C:\\xampp\\htdocs\\buku_tamu_gagal\\app\\templates\\index.html',
      1 => 1659502880,
      2 => 'file',
    ),
  ),
  'includes' => 
  array (
  ),
),false)) {
function content_62ea0127998114_16457300 (Smarty_Internal_Template $_smarty_tpl) {
?><!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    <div class="p-3 h-screen w-full">
        <div class="bg-cyan-50 rounded-2xl h-full overflow-auto flex justify-center flex-wrap items-center">
            <div class="p-2">
                <h1 class="mb-10 text-6xl font-semibold  w-full">e-Guestbook</h1>
                <div class="w-full flex justify-around">
                <a href="/daftar" class="rounded-xl bg-cyan-500 px-3 py-1 text-white font-semibold hover:bg-cyan-600 hover:text-gray-100" title="Enroll a new user on this FACEIO application">Enroll New
                    User</a>
                <button onclick="authenticateUser()"
                class="rounded-xl ring ring-cyan-500 px-3 py-1 text-cyan-500 font-semibold hover:ring-cyan-600 hover:text-cyan-600" title="Authenticate a previously enrolled user on this application">Authenticate User</button>
                </div>
            </div>
            <div id="faceio-modal"></div>
        </div>
    </div>

    
    <?php echo '<script'; ?>
 src="https://cdn.faceio.net/fio.js"><?php echo '</script'; ?>
>
    <?php echo '<script'; ?>
 type="text/javascript">
        // Initialize the library first with your application Public ID.
        // Grab your public ID from the Application Manager on the FACEIO console at: https://console.faceio.net/
        const faceio = new faceIO("fioa3e5d"); // Replace with your application Public ID
        function enrollNewUser() {
            // Start the facial enrollment process
            faceio.enroll({
                "locale": "auto", // Default user locale
                "userConsent": false, // Set to true if you have already collected user consent
                "payload": {
                    /* The payload we want to associate with this user
                     * which is forwarded back to us upon future
                     * authentication of this particular user.*/
                    "whoami": 123456, // Example of dummy ID linked to this particular user
                    "email": "john.doe@example.com"
                }
            }).then(userInfo => {
                // User Successfully Enrolled!
                alert(
                    `User Successfully Enrolled! Details:
			Unique Facial ID: ${userInfo.facialId}
			Enrollment Date: ${userInfo.timestamp}
			Gender: ${userInfo.details.gender}
			Age Approximation: ${userInfo.details.age}`
                );
                console.log(userInfo);
                // handle success, save the facial ID, redirect to dashboard...
            }).catch(errCode => {
                // handle enrollment failure. Visit:
                // https://faceio.net/integration-guide#error-codes
                // for the list of all possible error codes
                handleError(errCode);
            });
        }

        function authenticateUser() {
            // Start the facial authentication process (Identify a previously enrolled user)
            faceio.authenticate({
                "locale": "auto" // Default user locale
            }).then(userData => {
                console.log("Success, user recognized")
                // Grab the facial ID linked to this particular user which will be same
                // for each of his successful future authentication. FACEIO recommend
                // that your rely on this Facial ID if you plan to uniquely identify
                // all enrolled users on your backend for example.
                console.log("Linked facial Id: " + userData.facialId)
                // Grab the arbitrary data you have already linked (if any) to this particular user
                // during his enrollment via the payload parameter of the enroll() method.
                console.log("Associated Payload: " + JSON.stringify(userData.payload))
                const dataImg = JSON.stringify(userData.payload.image).toString()
                console.log(dataImg.replace('\\"',''))
                //document.location.pathname = `/guest/${JSON.stringify(userData.payload.image)}`;
                // {"whoami": 123456, "email": "john.doe@example.com"} set via enroll()
            }).catch(errCode => {
                // handle authentication failure. Visit:
                // https://faceio.net/integration-guide#error-codes
                // for the list of all possible error codes
                handleError(errCode);
            });
        }

        function handleError(errCode) {
            // Log all possible error codes during user interaction..
            // Refer to: https://faceio.net/integration-guide#error-codes
            // for a detailed overview when these errors are triggered.
            switch (errCode) {
                case fioErrCode.PERMISSION_REFUSED:
                    console.log("Access to the Camera stream was denied by the end user");
                    break;
                case fioErrCode.NO_FACES_DETECTED:
                    console.log("No faces were detected during the enroll or authentication process");
                    break;
                case fioErrCode.UNRECOGNIZED_FACE:
                    console.log("Unrecognized face on this application's Facial Index");
                    document.location.pathname = `/daftar`;
                    break;
                case fioErrCode.MANY_FACES:
                    console.log("Two or more faces were detected during the scan process");
                    break;
                case fioErrCode.PAD_ATTACK:
                    console.log("Presentation (Spoof) Attack (PAD) detected during the scan process");
                    break;
                case fioErrCode.FACE_MISMATCH:
                    console.log("Calculated Facial Vectors of the user being enrolled do not matches");
                    document.location.pathname = `/dashboard`;
                    break;
                case fioErrCode.WRONG_PIN_CODE:
                    console.log("Wrong PIN code supplied by the user being authenticated");
                    break;
                case fioErrCode.PROCESSING_ERR:
                    console.log("Server side error");
                    document.location.pathname = `/home`;
                    break;
                case fioErrCode.UNAUTHORIZED:
                    console.log(
                        "Your application is not allowed to perform the requested operation (eg. Invalid ID, Blocked, Paused, etc.). Refer to the FACEIO Console for additional information"
                    );
                    document.location.pathname = `/dashboard`;
                    break;
                case fioErrCode.TERMS_NOT_ACCEPTED:
                    console.log("Terms & Conditions set out by FACEIO/host application rejected by the end user");
                    break;
                case fioErrCode.UI_NOT_READY:
                    console.log("The FACEIO Widget code could not be (or is being) injected onto the client DOM");
                    document.location.pathname = `/dashboard`;
                    break;
                case fioErrCode.SESSION_EXPIRED:
                    console.log(
                        "Client session expired. The first promise was already fulfilled but the host application failed to act accordingly"
                    );
                    break;
                case fioErrCode.TIMEOUT:
                    console.log(
                        "Ongoing operation timed out (eg, Camera access permission, ToS accept delay, Face not yet detected, Server Reply, etc.)"
                    );
                    document.location.pathname = `/dashboard`;
                    break;
                case fioErrCode.TOO_MANY_REQUESTS:
                    console.log(
                        "Widget instantiation requests exceeded for freemium applications. Does not apply for upgraded applications"
                    );
                    break;
                case fioErrCode.EMPTY_ORIGIN:
                    console.log("Origin or Referer HTTP request header is empty or missing");
                    break;
                case fioErrCode.FORBIDDDEN_ORIGIN:
                    console.log("Domain origin is forbidden from instantiating fio.js");
                    break;
                case fioErrCode.FORBIDDDEN_COUNTRY:
                    console.log("Country ISO-3166-1 Code is forbidden from instantiating fio.js");
                    break;
                case fioErrCode.SESSION_IN_PROGRESS:
                    console.log("Another authentication or enrollment session is in progress");
                    break;
                case fioErrCode.NETWORK_IO:
                default:
                    console.log("Error while establishing network connection with the target FACEIO processing node");
                    break;
            }
        }
    <?php echo '</script'; ?>
>
    
</body>

</html><?php }
}
